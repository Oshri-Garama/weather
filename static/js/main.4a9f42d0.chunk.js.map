{"version":3,"sources":["App.js","index.js"],"names":["Weather","props","state","city","data","error","handleChange","bind","handleSearch","event","this","setState","target","value","url","axios","get","then","res","status","catch","id","type","onChange","placeholder","onClick","main","className","name","sys","country","temp","weather","description","toUpperCase","feels_like","React","Component","reactDOM","render","App","document","getElementById"],"mappings":"0PAgFeA,G,wDAzEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAMF,EAAME,MAAQ,GACpBC,KAAM,GACNC,MAAO,MAET,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBARH,E,yDAWNE,GACXC,KAAKC,SAAS,CACZR,KAAMM,EAAMG,OAAOC,U,qCAIP,IAAD,OAEPC,EAAG,4DAAwDJ,KAAKR,MAAMC,KAAnE,kBADK,SACL,kBAtBS,oCAwBlBY,IACGC,IAAIF,GACJG,MAAK,SAACC,GACc,MAAfA,EAAIC,QACN,EAAKR,SAAS,CACZP,KAAMc,EAAId,KACVC,MAAO,UAIZe,OAAM,WACL,EAAKT,SAAS,CACZN,MAAM,IAAD,OAAM,EAAKH,MAAMC,KAAjB,gC,+BAKH,IAAD,EACiBO,KAAKR,MAArBG,EADD,EACCA,MAAOD,EADR,EACQA,KAEf,OACE,6BACE,2BACEiB,GAAG,aACHC,KAAK,SACLC,SAAUb,KAAKJ,aACfkB,YAAY,aAEd,4BAAQH,GAAG,gBAAgBC,KAAK,SAASG,QAASf,KAAKF,cAAvD,WAGEH,GAASD,EAAKsB,KACd,yBAAKC,UAAU,oBACb,6BACE,8BACGvB,EAAKwB,KADR,KACgBxB,EAAKyB,IAAIC,SAEzB,uBAAGT,GAAG,uBACHjB,EAAKsB,KAAKK,KADb,QACyB,KACtB3B,EAAK4B,QAAQ,GAAGC,YAAYC,cAF/B,IAE+C,KAF/C,cAGc9B,EAAKsB,KAAKS,WAHxB,UAQJ,6BAAM9B,S,GAnEM+B,IAAMC,YCF5BC,IAASC,OAAO,kBAACC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.4a9f42d0.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport \"./styles/weather.css\";\n\nconst apiWeatherKey = \"a7e9b7cd83166d594a42858290bbc541\";\n\nclass Weather extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: props.city || '',\n      data: {},\n      error: null,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      city: event.target.value,\n    });\n  }\n\n  handleSearch() {\n    const units = \"metric\";\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&units=${units}&appid=${apiWeatherKey}`;\n\n    axios\n      .get(url)\n      .then((res) => {\n        if (res.status === 200) {\n          this.setState({\n            data: res.data,\n            error: null,\n          });\n        }\n      })\n      .catch(() => {\n        this.setState({\n          error: `'${this.state.city}' is not a valid city`,\n        });\n      });\n  }\n\n  render() {\n    const { error, data } = this.state;\n\n    return (\n      <div>\n        <input\n          id=\"search-bar\"\n          type=\"search\"\n          onChange={this.handleChange}\n          placeholder=\"Tel Aviv\"\n        ></input>\n        <button id=\"search-button\" type=\"submit\" onClick={this.handleSearch}>\n          Search\n        </button>\n        {!error && data.main ? (\n          <div className=\"output-container\">\n            <div>\n              <span>\n                {data.name}, {data.sys.country}\n              </span>\n              <p id=\"weather-description\">\n                {data.main.temp}&deg; {\"\\n\"}\n                {data.weather[0].description.toUpperCase()} {\"\\n\"}\n                feels like {data.main.feels_like}&deg;\n              </p>\n            </div>\n          </div>\n        ) : (\n          <div>{error}</div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Weather;\n","import React from 'react';\nimport reactDOM from 'react-dom';\nimport App from './App';\n\nreactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}